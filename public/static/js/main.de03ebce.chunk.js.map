{"version":3,"sources":["components/LoginButtons.js","components/NavigationBar.js","routes/Home.js","routes/Sell.js","configs/navigation-links.js","App.js","reportWebVitals.js","index.js"],"names":["LoginButtons","props","googleLoggedInSuccess","googleUser","profile","getBasicProfile","data","name","getName","email","getEmail","image","getImageUrl","token","getAuthResponse","id_token","fromGoogle","fetch","method","headers","body","JSON","stringify","then","response","json","setState","loggedIn","catch","error","console","log","googleLoggedInFailed","alert","googleLoggedOutSuccess","dummyLogin","render","state","className","clientId","buttonText","onLogoutSuccess","onSuccess","onFailure","isSignedIn","React","Component","NavigationBar","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","links","map","link","to","activeClassName","Home","Sell","navlinks","route","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de03ebce.chunk.js","sourcesContent":["import React from 'react';\r\nimport {GoogleLogin, GoogleLogout} from 'react-google-login';\r\n\r\n\r\nexport default class LoginButtons extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loggedIn: false\r\n        }\r\n    }\r\n\r\n    googleLoggedInSuccess = (googleUser) => {\r\n        var profile = googleUser.getBasicProfile();\r\n        var data = {\r\n            name: profile.getName(),\r\n            email: profile.getEmail(),\r\n            image: profile.getImageUrl(),\r\n            token: googleUser.getAuthResponse().id_token,   \r\n            fromGoogle: true\r\n        }\r\n        fetch(\"/api/sessions\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            }).then(response => response.json()).then(json => {\r\n                this.setState({loggedIn: true});\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    googleLoggedInFailed = () => {\r\n        alert(\"Unable to login with google. Try other login methods\");\r\n    }\r\n\r\n    googleLoggedOutSuccess = () => {\r\n        this.setState({loggedIn: false});\r\n    }\r\n\r\n    dummyLogin = () => {\r\n        fetch('/api/sessions', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({})\r\n        }).then(response => response.json()).then(json => {\r\n            alert(\"Dummy signed in\");\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        return (<div>\r\n            {(!this.state.loggedIn)?(<GoogleLogin\r\n                className=\"mr-2\"\r\n                clientId=\"584685314295-m141d4bsqmmc15qq9mc7lfbfmrosng8i.apps.googleusercontent.com\"\r\n                buttonText=\"Sign in with Google\"\r\n                onSuccess={this.googleLoggedInSuccess}\r\n                onFailure={this.googleLoggedInFailed}\r\n                isSignedIn={true}\r\n            />):(<GoogleLogout\r\n                className=\"mr-2\"\r\n                clientId=\"584685314295-m141d4bsqmmc15qq9mc7lfbfmrosng8i.apps.googleusercontent.com\"\r\n                buttonText=\"Sign out from Google\"\r\n                onLogoutSuccess={this.googleLoggedOutSuccess}\r\n            />)}\r\n        </div>);\r\n    }\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nexport default class NavigationBar extends React.Component {\r\n    render = () => (\r\n        <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"/\">Go Fortnite!</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            \r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    {this.props.links.map(link => (\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to={link.href} className=\"nav-link\" activeClassName=\"active\">{link.name}</NavLink>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default class Home extends React.Component {\r\n    render = () => (\r\n        <p>Home</p>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default class Sell extends React.Component {\r\n    render = () => (\r\n        <p>Sell</p>\r\n    );\r\n}","import Home from '../routes/Home';\r\nimport Sell from '../routes/Sell';\r\n\r\nlet navlinks = [\r\n    {\r\n        name: \"Home\",\r\n        href: \"/home\",\r\n        route: <Home/>\r\n    },{\r\n        name: \"Sell\",\r\n        href: \"/sell\",\r\n        route: <Sell/>\r\n    }\r\n]\r\n\r\nexport default navlinks;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport LoginButtons from './components/LoginButtons';\nimport NavigationBar from './components/NavigationBar';\nimport navlinks from './configs/navigation-links';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container-fluid\">\n        <NavigationBar links={navlinks}/>\n        <Switch>\n          {navlinks.map(link => (\n            <Route path={link.href}>\n              {link.route}\n            </Route>\n          ))}\n        </Switch>\n        <LoginButtons/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}