{"version":3,"sources":["scripts/fetchSessionChecker.js","scripts/paysafecheckout.js","components/NavigationBar.js","routes/Home/HomeContent.js","scripts/fortnite.js","configs/fortnite-categories.js","routes/Home.js","routes/Logout.js","components/CustomerDetails.js","components/CustomerEdit.js","routes/Cart.js","configs/navigation-links.js","components/LoginButtons.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","url","options","responseCallback","errorCallback","response","fetch","then","json","error","window","location","href","catch","console","log","API_KEY","btoa","checkout","amount","hash","extra","Promise","resolve","reject","currency","merchantRefNum","String","billingAddress","nickName","firstName","lastName","street","street2","city","zip","country","state","environment","customer","email","phone","dateOfBirth","day","month","year","displayPaymentMethods","paymentMethodDetails","paysafecard","consumerId","global","paysafe","setup","instance","result","showFailureScreen","currencyCode","showSuccessScreen","isOpen","close","stage","expired","Error","NavigationBar","render","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","props","links","map","link","to","activeClassName","name","React","Component","HomeContent","items","item","price","src","images","background","alt","style","height","description","pathname","fortnite","require","backpack","bannertoken","bundle","contrail","cosmeticvariant","emoji","emote","glider","loadingscreen","music","outfit","pet","pickaxe","spray","toy","wrap","Home","componentDidMount","a","listItems","setState","tabs","Object","keys","tab","path","fortnitemapping","exact","match","params","customerDetails","onClick","edit","details","string","CustomerEdit","useForm","register","handleSubmit","errors","reset","useEffect","getForm","onSubmit","data","split","dob","parseInt","validated","update","bind","placeholder","ref","required","max","Date","toLocaleDateString","requirements","push","length","join","Cart","cart","method","headers","removeItem","filter","i","filterCustomerInfo","detail","merchantCustomerId","JSON","stringify","filterAddressInfo","address_id","customer_id","updateAddressDetail","body","updateCustomerDetail","assign","editCustomerDetail","placeOrder","total","getTime","alert","cartDetails","getCartDetails","orderSummary","getOrderDetails","getCustomerDetails","width","opacity","title","serializeCustomerInfo","names","slice","d","warning","notvalid","Array","isArray","navlinks","route","withRouter","useGoogleLogout","clientId","onLogoutSuccess","useHistory","signOut","loaded","LoginButtons","googleLoggedInSuccess","googleUser","profile","getBasicProfile","getName","getEmail","image","getImageUrl","token","getAuthResponse","id_token","fromGoogle","loggedIn","redirect","home","googleLoggedInFailed","dummyLogin","buttonText","onSuccess","onFailure","isSignedIn","Login","top","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19a72e27.chunk.js","sourcesContent":["module.exports = function wfetch(url, options, responseCallback, errorCallback){\r\n    let response = fetch(url, options);\r\n    response.then(response => response.json()).then(response => {\r\n        if(response.error === \"NOT AUTHORIZED\"){\r\n            window.location.href = \"/login\";\r\n            return;\r\n        }\r\n        responseCallback(response);\r\n    }).catch(error => {\r\n        console.log(error);\r\n        errorCallback(error);\r\n    });\r\n    return response;\r\n}","import btoa from 'btoa';\r\n\r\nconst API_KEY = btoa(\"public-7751:B-qa2-0-5f031cbe-0-302d021500890ef262296563accd1cb4aab790323d2fd570d30214510bcdacdaa4f03f59477eef13f2af5ad13e3044\");\r\n\r\nexport default function checkout(amount, hash, extra){\r\n    return new Promise((resolve, reject) => {\r\n        function resultCallback(instance, error, result){\r\n            if(error){\r\n                reject(error);\r\n                instance.showFailureScreen(\"Error in purchase\");\r\n            }else{\r\n                result.merchantRefNum = options.merchantRefNum;\r\n                result.amount = options.amount;\r\n                result.currencyCode = options.currency;\r\n                instance.showSuccessScreen(\"Purchased successfully\");\r\n            }\r\n            if(instance.isOpen()){\r\n                instance.close();\r\n            }\r\n            resolve(result);\r\n        }\r\n        function closeCallback(stage, expired){\r\n            if(expired) reject(new Error(\"Checkout expired\"));\r\n            return false;\r\n        }\r\n\r\n        var options = {\r\n            currency: \"USD\",\r\n            merchantRefNum: String(hash),\r\n            amount: amount * 100,\r\n            billingAddress: { //remove this\r\n                nickName: extra.firstName + \" \" + extra.lastName,\r\n                street: extra.street,\r\n                street2: extra.street2,\r\n                city: extra.city,\r\n                zip: extra.zip,\r\n                country: extra.country,\r\n                state: extra.state\r\n            },\r\n            environment: \"TEST\",\r\n            customer: {\r\n                firstName: extra.firstName,\r\n                lastName: extra.lastName,\r\n                email: extra.email,\r\n                phone: extra.phone,\r\n                dateOfBirth: {\r\n                    day: extra.dateOfBirth.day,\r\n                    month: extra.dateOfBirth.month,\r\n                    year: extra.dateOfBirth.year\r\n                }\r\n            },\r\n            displayPaymentMethods: ['card'],\r\n            paymentMethodDetails: {\r\n                paysafecard: {\r\n                    consumerId: extra.email\r\n                }\r\n            }\r\n        }\r\n\r\n        global.paysafe.checkout.setup(API_KEY, options, resultCallback, closeCallback);\r\n    });\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nexport default class NavigationBar extends React.Component {\r\n    render = () => (\r\n        <nav className=\"navbar sticky-top navbar-expand-md navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"/\">Go Fortnite!</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            \r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    {this.props.links.map(link => (\r\n                        <li key={link.name} className=\"nav-item\">\r\n                            <NavLink to={link.href} className=\"nav-link\" activeClassName=\"active\">{link.name}</NavLink>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class HomeContent extends React.Component {\r\n    render = () => (\r\n        <div className=\"row\">\r\n            {\r\n                this.props.items.map(item => {\r\n                    if(item.price == 0){\r\n                        item.price = 100;\r\n                    }\r\n                    return (<div key={item.id} className=\"col-lg-4 col-md-5 col-sm-6\">\r\n                        <div className=\"card my-2\">\r\n                            <div className=\"card-header\">\r\n                                {item.type}\r\n                            </div>\r\n                            <img src={item.images.background} alt={item.name} className=\"card-image-top image-fluid rounded\" style={{height: \"230px\"}}/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{item.name}</h5>\r\n                                <p className=\"card-text\">{item.description}</p>\r\n                                <Link \r\n                                    to={{\r\n                                        pathname: \"../cart\",\r\n                                        item\r\n                                    }}   \r\n                                    className=\"btn btn-success\">\r\n                                        Buy\r\n                                </Link>\r\n                                <p className=\"float-right\">{\"$\"+item.price}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>);\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}","const FortniteAPI = require('fortnite-api-io');\r\nconst fortnite = new FortniteAPI(\"13fd547d-483005c8-d4944523-16cc9b95\");\r\n\r\nlet items = null;\r\nexport default function getItems(){\r\n    return new Promise(async function(resolve, reject){\r\n        try{\r\n            if(items != null){\r\n                resolve(items);\r\n                return;\r\n            }\r\n            items = await fortnite.listItems();\r\n            resolve(items);\r\n        }catch(error){\r\n            reject(items);\r\n        }\r\n    });\r\n}","export default {\r\n    backpack: \"Back Pack\",\r\n    bannertoken: \"Banner Token\",\r\n    bundle: \"Bundle\",\r\n    contrail: \"Contrail\",\r\n    cosmeticvariant: \"Cosmetic Variant\",\r\n    emoji: \"Emoji\",\r\n    emote: \"Emote\",\r\n    glider: \"Glider\",\r\n    loadingscreen: \"Loading Screen\",\r\n    music: \"Music\",\r\n    outfit: \"Outfit\",\r\n    pet: \"Pet\",\r\n    pickaxe: \"Pick Axe\",\r\n    spray: \"Spray\",\r\n    toy: \"Toy\",\r\n    wrap: \"Wrap\"\r\n}","import React from 'react';\r\nimport { NavLink, Route, Switch, Redirect } from 'react-router-dom';\r\nimport HomeContent from './Home/HomeContent';\r\n\r\nimport getFortniteItems from '../scripts/fortnite';\r\nimport fortnitemapping from '../configs/fortnite-categories';\r\n\r\nexport default class Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            tabs: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        getFortniteItems().then(result => {\r\n            this.setState({tabs: result.items});\r\n        }).catch(error => {\r\n            this.setState({tabs: null});\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        if(this.state.tabs == null){\r\n            return (<div className=\"row\"></div>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-12 col-md-3 col-lg-2 col-xl-2\">\r\n                    <nav className=\"nav navbar-dark bg-dark\">\r\n                        <ul className=\"navbar-nav p-3 list-unstyled\">\r\n                            {Object.keys(this.state.tabs).map(tab => (\r\n                                <li key={tab} className=\"nav-item\">\r\n                                    <NavLink className=\"nav-link\" activeClassName=\"active\" to={this.props.path + \"/\" + tab}> {(fortnitemapping[tab] != null)? fortnitemapping[tab]: tab} </NavLink>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"col-sm-12 col-md-9 col-lg-10 col-xl-10\">\r\n                        <Switch>\r\n                            <Route exact path={this.props.path}>\r\n                                <Redirect to={this.props.path + \"/\" + Object.keys(this.state.tabs)[0]}/>\r\n                            </Route>\r\n                            \r\n                            <Route path={this.props.path + \"/:tab\"} render={\r\n                                (props) => {\r\n                                    return (\r\n                                        <HomeContent name={props.match.params.tab} items={this.state.tabs[props.match.params.tab]}/>\r\n                                    );\r\n                                }\r\n                            }/>\r\n                        </Switch>\r\n                </div>\r\n            </div>);\r\n    };\r\n}","import { useGoogleLogout } from 'react-google-login';\r\nimport {useHistory} from 'react-router-dom';\r\nconst fetch = require('../scripts/fetchSessionChecker');\r\n\r\nexport default function(){\r\n    let {signOut, loaded} = useGoogleLogout({\r\n        clientId: \"584685314295-m141d4bsqmmc15qq9mc7lfbfmrosng8i.apps.googleusercontent.com\",\r\n        onLogoutSuccess: function(){\r\n            fetch(\"/api/sessions\", {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n            }, json => {\r\n                let history = useHistory();\r\n                history.push(\"/login\");\r\n            }, error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    });\r\n    if(loaded){\r\n        signOut();\r\n    }\r\n    return (<div></div>);\r\n}","export default function customerDetails(props) {\r\n    let edit = function (){\r\n        props.edit(props.details);\r\n    }\r\n\r\n    return (\r\n        <div className='card'>\r\n            <div className='card-header'>\r\n                Customer information\r\n                <button className='float-right btn btn-link btn-sm' onClick={edit}>Edit</button>\r\n            </div>\r\n            <div className='card-body'>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <p>\r\n                            <b>{props.details.firstName + \" \" + props.details.lastName}</b>\r\n                        </p>\r\n                        <p>{props.details.email}{(props.details.phone)? \", \" + props.details.phone: \"\"}</p>\r\n                        <p>{props.details.dateOfBirth.string}</p>\r\n                        <p className=\"mb-0\">\r\n                            <small>{props.details.street}</small>\r\n                        </p>\r\n                            {props.details.street2? (<p className=\"mt-0\"><small>{props.details.street2}</small></p>): \"\"}\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <p>{props.details.city}</p>\r\n                        <p>{props.details.state + \", \" + props.details.country}</p>\r\n                        <p>{props.details.zip}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nexport default function CustomerEdit(props) {\r\n\r\n    const { register, handleSubmit, errors, reset } = useForm();\r\n    \r\n    useEffect(() => {\r\n        console.log(props.details);\r\n        reset(props.details);\r\n    }, [props.details, reset]);\r\n\r\n    return (\r\n        <div className=\"col p-0 card my-2\">\r\n            <div className=\"card-header text-dark\">\r\n                <h5>Customer Information</h5>\r\n            </div>\r\n            <div className=\"card-body p-2\">\r\n                {getForm(props, register, handleSubmit, errors)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n function onSubmit(props, data){\r\n    let dateOfBirth = data.dateOfBirth.split('-');\r\n    let dob = {\r\n        year: parseInt(dateOfBirth[0]),\r\n        month: parseInt(dateOfBirth[1]),\r\n        day: parseInt(dateOfBirth[2])   \r\n    }\r\n    dateOfBirth = {\r\n        string: data.dateOfBirth,\r\n        ...dob\r\n    }\r\n    data.dateOfBirth = dateOfBirth;\r\n\r\n    data.validated = true;\r\n    props.update(data);\r\n} \r\n\r\nfunction getForm(props, register, handleSubmit, errors){\r\n    if(props.details == null){\r\n        return (<div className=\"row p-5\">\r\n            <h3 className=\"text-light\">No details found</h3>\r\n        </div>);\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit.bind(null, props))}>\r\n            <div className=\"form-group col\">\r\n                <div className=\"row py-1\">\r\n                    <p className=\"text-dark p-1\">Personal Details</p>\r\n                </div>\r\n                <div className=\"row py-1\">\r\n                    <div className=\"col-sm-12 col-lg-4 col-md-6 py-1\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"firstName\" \r\n                                name=\"firstName\" placeholder=\"First\" ref={register({required: true})}/>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-lg-4 col-md-6 py-1\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"lastName\" \r\n                                name=\"lastName\" placeholder=\"Last\" ref={register({required: true})}/>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-lg-4 col-md-6 py-1\">\r\n                        {errors.firstName && <small className=\"text-danger\">*First Name Required</small>}\r\n                        {errors.lastName && <small className=\"text-danger\">*Last Name Required</small>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row py-1\">\r\n                    <div className=\"col-sm-12 col-lg-4 col-md-6 py-1\">\r\n                        <input type=\"email\" className=\"form-control\" id=\"email\" \r\n                                name=\"email\" placeholder=\"Email\" ref={register({required: true})}/>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-lg-4 col-md-6 py-1\">\r\n                        <input type=\"tel\" className=\"form-control\" id=\"phone\" \r\n                                name=\"phone\" placeholder=\"Mobile\" ref={register}/>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-lg-4 col-md-6 py-1\">\r\n                        {errors.email && <small className=\"text-danger\">*Email id is required</small>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row py-1\">\r\n                    <div className=\"col-sm-12 col-lg-4 col-md-6 py-1\">\r\n                        <input type=\"date\" className=\"form-control\" id=\"dateOfBirth\" \r\n                                name=\"dateOfBirth\" max={new Date().toLocaleDateString()} \r\n                                placeholder=\"Date of Birth\" ref={register({required: true})}/>\r\n                        <small className=\"text-dark\">Date of Birth</small>\r\n                    </div>\r\n                    <div className=\"col-sm-0 col-lg-4 col-md-0 py-1\"></div>\r\n                    <div className=\"col-sm-12 col-lg-4 col-md-6 py-1\">\r\n                        {errors.dateOfBirth && <small className=\"text-danger\">Date of Birth required</small>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row py-1 mt-2\">\r\n                    <p className=\"text-dark p-1\">Address</p>\r\n                </div>\r\n                <div className=\"row py-1\">\r\n                    <div className=\"col-sm-12 col-lg-8 col-md-12 py-1\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"street\" \r\n                                name=\"street\" placeholder=\"Address Line 1\" ref={register({required: true})}/>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-lg-8 col-md-12 py-1\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"street2\" \r\n                                name=\"street2\" placeholder=\"Address Line 2\" ref={register}/>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-lg-4 col-md-12 py-1\">\r\n                        {errors.street && <small className=\"text-danger\">Address required, atleast line 1</small>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row py-1\">\r\n                    <div className=\"col-sm-12 col-lg-4 col-md-6 py-1\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"city\" \r\n                                name=\"city\" placeholder=\"City\" ref={register({required: true})}/>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-lg-4 col-md-6 py-1\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"zip\" \r\n                                name=\"zip\" placeholder=\"Zip\" ref={register({required: true})}/>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-lg-4 col-md-6 py-1\">\r\n                        {\r\n                            (() => {\r\n                                let {city, zip, state, country} = errors;\r\n                                let requirements = [];\r\n                                city && requirements.push(\"City\");\r\n                                zip && requirements.push(\"Zip\");\r\n                                state && requirements.push(\"State\");\r\n                                country && requirements.push(\"Country\");\r\n                                if(requirements.length > 0){\r\n                                    return (<small className=\"text-danger\">{requirements.join(', ') + \" required\"}</small>);\r\n                                }\r\n                            })()\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"row py-1\">\r\n                    <div className=\"col-sm-12 col-lg-4 col-md-6 py-1\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"state\" \r\n                                name=\"state\" placeholder=\"State\" ref={register({required: true})}/>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-lg-4 col-md-6 py-1\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"country\" \r\n                                name=\"country\" placeholder=\"Country\" ref={register({required: true})}/>\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-lg-3 col-md-12 py-1\">\r\n                        <button type=\"sumbit\" className=\"form-control btn btn-primary\">Update Info</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport checkout from '../scripts/paysafecheckout';\r\nimport CustomerDetails from '../components/CustomerDetails';\r\nimport CustomerEdit from '../components/CustomerEdit';\r\n\r\nconst fetch = require('../scripts/fetchSessionChecker');\r\n\r\nclass Cart extends React.Component {\r\n    static propTypes = {\r\n        match: PropTypes.object.isRequired,\r\n        location: PropTypes.object.isRequired,\r\n        history: PropTypes.object.isRequired\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n        let cart = [];\r\n        if(props.cart != null && Array.isArray(props.cart)){\r\n            cart = props.cart;\r\n        }\r\n        this.state = {\r\n            cart,\r\n            customer: null\r\n            // customer: JSON.parse('{\"firstName\":\"Infant\",\"lastName\":\"Antony Shelton\",\"email\":\"sheltonanton@gmail.com\",\"phone\":\"\",\"dateOfBirth\":{\"string\": \"1997-01-12\", \"year\":1997,\"month\":1,\"day\":12},\"street\":\"F3 Royal Paradise Gandhi Nagar\",\"street2\":\"IAF Road Selaiyur\",\"city\":\"San Fransisco\",\"zip\":\"58769\",\"state\":\"California\",\"country\":\"United States\",\"validated\":true}')\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const {location} = this.props;\r\n        let item = location.item;\r\n        let cart = this.state.cart;\r\n        if(item != null){\r\n            cart.push(item);\r\n        }\r\n        fetch('/api/customers', {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }, json => {\r\n            this.setState({cart: [...cart], customer: json});\r\n        }, error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    removeItem = (item) => {\r\n        let cart = this.state.cart.filter(i => i.id != item.id);\r\n        this.setState({cart, customer: this.state.customer});\r\n    }\r\n\r\n    filterCustomerInfo = (detail, id) => {\r\n        let {\r\n            merchantCustomerId,\r\n            firstName,\r\n            lastName,\r\n            dateOfBirth: {\r\n                year,\r\n                month,\r\n                day\r\n            },\r\n            email\r\n        } = detail;\r\n        let result = {\r\n            merchantCustomerId,\r\n            firstName,\r\n            lastName,\r\n            dateOfBirth: {\r\n                year,\r\n                month,\r\n                day\r\n            },\r\n            email\r\n        }\r\n        if(id){\r\n            result.id = id;\r\n        }\r\n        return JSON.stringify(result);\r\n    }\r\n\r\n    filterAddressInfo = (detail, address_id) => {\r\n        let {id, street, street2, city, state, country, zip} = detail;\r\n        let result = {customer_id: id, street, street2, city, state, country, zip};\r\n        if(address_id){\r\n            result.address_id = address_id;\r\n        }\r\n        return JSON.stringify(result);\r\n    }\r\n\r\n    updateAddressDetail = (detail) => {\r\n        fetch(`/api/customers/${detail.customer_id}/addresses${detail.address_id? \"/\"+detail.address_id: \"\"}`, {\r\n            method: (detail.address_id)? \"PUT\": \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: this.filterAddressInfo(detail, detail.address_id)\r\n        }, (json) => {\r\n            detail.address_id = json.id;\r\n        }, (error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    updateCustomerDetail = (detail) => {\r\n        detail = Object.assign(this.state.customer || {}, detail);\r\n        this.setState({cart: this.state.cart, customer: detail});\r\n\r\n        fetch(`/api/customers/${detail.customer_id? detail.customer_id: \"\"}`, {\r\n            method: (detail.customer_id)? \"PUT\": \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: this.filterCustomerInfo(detail, detail.customer_id)\r\n        }, (json) => {\r\n            detail.customer_id = json.id;\r\n            this.updateAddressDetail(detail);\r\n        }, error => console.log(error));\r\n    }\r\n\r\n    editCustomerDetail = (detail) => {\r\n        detail = Object.assign(this.state.customer || {}, detail);\r\n        let customer = Object.assign({}, detail, {validated: false});\r\n        this.setState({cart: this.state.cart, customer});\r\n    }\r\n\r\n    placeOrder = (total) => {\r\n        checkout(total, new Date().getTime(), this.state.customer).then(result => {\r\n            fetch('/api/payments/', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(result)\r\n            }, json => {\r\n                console.log(json);\r\n            }, error => {\r\n                alert(\"Error while processing payment\");\r\n            });\r\n            return true;\r\n        }, error => {\r\n            console.log(error);\r\n            alert(\"PaySafe checkout failed\");\r\n            return false;\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        let cartDetails = this.getCartDetails();\r\n        let orderSummary = this.getOrderDetails();\r\n        let customerDetails = this.getCustomerDetails();\r\n        return (\r\n            <section>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-9 col-md-9 col-sm-12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                            {cartDetails}\r\n                        </div>\r\n                        <div className=\"col-12\"><hr></hr></div>\r\n                        <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                            {customerDetails}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-3 col-md-3 col-sm-12\">\r\n                    {orderSummary}\r\n                </div>\r\n            </div>\r\n            </section>\r\n        );\r\n    }\r\n\r\n    getCartDetails = () => {\r\n        let cart = this.state.cart;\r\n        let cartDetails = cart.map(item => {\r\n            return (\r\n                <div key={item.id} className=\"card my-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4\">\r\n                            <img src={item.images.background} alt={item.name} className=\"img-fluid\" style={{width: \"200px\"}}/>\r\n                        </div>\r\n                        <div className=\"col-5\">\r\n                            <div className=\"card-body\" style={{height: \"85%\"}}>\r\n                                <h5 className=\"card-title\">{item.name}</h5>\r\n                                <section className=\"card-text\">\r\n                                    <p>{item.description}</p>\r\n                                    <p><b>{item.type} (type)</b></p>\r\n                                </section>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-3 text-right\">\r\n                            <p className=\"card-text p-4 align-bottom\">\r\n                                <big className=\"text-muted\">\r\n                                    {\"$\" + item.price}\r\n                                </big>\r\n                            </p>\r\n                            <button className=\"btn btn-danger btn-sm m-4\" onClick={this.removeItem.bind(this, item)}>\r\n                                &#10007;\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n        if(cart.length == 0){\r\n            cartDetails = (\r\n                <div className=\"text-center p-4\">\r\n                <h2 className=\"text-muted\">Feeling empty!</h2>\r\n                <img src={'/feeling_empty.png'} style={{width: 80, height: 80, opacity: 0.2}} alt=\"Feeling Empty\"/>\r\n                </div>\r\n            );\r\n        }\r\n        return cartDetails;\r\n    }\r\n\r\n    getOrderDetails = () => {\r\n        let total = 0;\r\n        let orderSummary = (\r\n            <div>\r\n                <table className=\"table my-2\" style={{height: \"70%\"}}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Item</th>\r\n                            <th className=\"text-right\">Cost</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.state.cart.map(item => {\r\n                            total += item.price;\r\n                            return (<tr key={item.id}>\r\n                                <td>{item.name}</td>\r\n                                <td className=\"text-right\">{\"$\" + item.price}</td>\r\n                            </tr>);\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td><i>Total</i></td>\r\n                            <td className=\"text-right\">{\"$\" + total}</td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n                <div className=\"text-right\">\r\n                    <button \r\n                        className={\r\n                            \"btn btn-sm btn-outline-success m-1\" + (\r\n                                (\r\n                                    this.state.cart.length == 0 ||\r\n                                    this.state.customer == null || \r\n                                    (!this.state.customer.validated)\r\n                                )? \" disabled\": \"\")\r\n                            } \r\n                        onClick={\r\n                            (\r\n                                this.state.cart.length == 0 ||\r\n                                this.state.customer == null || \r\n                                (!this.state.customer.validated)\r\n                            )? null: this.placeOrder.bind(this, total)\r\n                        }\r\n\r\n                        title={\r\n                            (\r\n                                this.state.cart.length == 0 ||\r\n                                this.state.customer == null || \r\n                                (!this.state.customer.validated)\r\n                            )? \"Provide proper customer information\": null\r\n                        }\r\n                    >\r\n                            Place Order\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n        return orderSummary;\r\n    }\r\n\r\n    serializeCustomerInfo = (details) => {\r\n        details = details || {};\r\n        if(details.firstName == null && details.lastName == null && details.name != null && typeof details.name === 'string'){\r\n            let names = details.name.split(' ');\r\n            let firstName = names[0];\r\n            let lastName = (names.length > 1)? names.slice(1).join(' '): null;\r\n            details.firstName = firstName;\r\n            details.lastName = lastName;\r\n        }\r\n        if(typeof details.dateOfBirth == \"object\" && details.dateOfBirth != null){\r\n            details.dateOfBirth = details.dateOfBirth.string || (()=>{\r\n                let d = details.dateOfBirth;\r\n                d.month = String(d.month);\r\n                d.year = String(d.year);\r\n                d.month = (d.month.length == 1)? \"0\"+d.month: d.month;\r\n                d.day = (d.day.length == 1)? \"0\"+d.day: d.day;\r\n                return d.year + \"-\" + d.month + \"-\" + d.day;\r\n            })();\r\n        }\r\n\r\n        return details;\r\n    }\r\n\r\n    getCustomerDetails = () => {\r\n        let warning = \"\";\r\n        let notvalid = this.state.customer == null || !(this.state.customer.validated);\r\n        if(notvalid){\r\n            warning = <small className=\"text-danger p-1\">\r\n                <b>&#x26A0; Specify your right information to enable 'Place Order'</b>\r\n                </small>\r\n        }\r\n        return (\r\n            <section>\r\n                {warning}\r\n                {(notvalid)? (<CustomerEdit details={this.serializeCustomerInfo(this.state.customer)} update={this.updateCustomerDetail}/>):(<CustomerDetails details={this.state.customer} edit={this.editCustomerDetail}/>)}\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Cart);","import Home from '../routes/Home';\r\nimport Logout from '../routes/Logout';\r\nimport Cart from '../routes/Cart';\r\n\r\nlet navlinks = [\r\n    {\r\n        name: \"Home\",\r\n        href: \"/home\",\r\n        route: Home\r\n    },{\r\n        name: \"My Cart\",\r\n        href: \"/cart\",\r\n        route: Cart\r\n    },{\r\n        name: \"Logout\",\r\n        href: \"/logout\",\r\n        route: Logout\r\n    }\r\n]\r\n\r\nexport default navlinks;","import React from 'react';\r\nimport {GoogleLogin} from 'react-google-login';\r\nimport { Redirect } from 'react-router-dom';\r\nconst fetch = require('../scripts/fetchSessionChecker');\r\nexport default class LoginButtons extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loggedIn: false\r\n        }\r\n    }\r\n\r\n    googleLoggedInSuccess = (googleUser) => {\r\n        var profile = googleUser.getBasicProfile();\r\n        var data = {\r\n            name: profile.getName(),\r\n            email: profile.getEmail(),\r\n            image: profile.getImageUrl(),\r\n            token: googleUser.getAuthResponse().id_token,   \r\n            fromGoogle: true\r\n        }\r\n        fetch(\"/api/sessions\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            }, (json) => {\r\n                this.setState({loggedIn: true, redirect: this.props.home});\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    googleLoggedInFailed = () => {\r\n        alert(\"Unable to login with google. Try other login methods\");\r\n    }\r\n\r\n    dummyLogin = () => {\r\n        fetch('/api/sessions', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({})\r\n        }, json => {\r\n            alert(\"Dummy signed in\");\r\n        }, error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        if(this.state.redirect){\r\n            return (<Redirect to={this.state.redirect}/>);\r\n        }\r\n        return (<div>\r\n            {(<GoogleLogin\r\n                className=\"mr-2\"\r\n                clientId=\"584685314295-m141d4bsqmmc15qq9mc7lfbfmrosng8i.apps.googleusercontent.com\"\r\n                buttonText=\"Sign in with Google\"\r\n                onSuccess={this.googleLoggedInSuccess}\r\n                onFailure={this.googleLoggedInFailed}\r\n                isSignedIn={true}\r\n            />)}\r\n        </div>);\r\n    }\r\n}","import React from 'react';\r\n\r\nimport LoginButtons from './LoginButtons';\r\n\r\nexport default class Login extends React.Component {\r\n    render = () => (\r\n        <div className=\"container py-5\" style={{top: \"auto\"}}>\r\n            <h2 className=\"text-center p-5\">Welcome to Fortnite Store!</h2>\r\n            <div className=\"row\">\r\n                <div className=\"col text-center my-auto\">\r\n                    <LoginButtons home={this.props.home}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\nimport NavigationBar from './components/NavigationBar';\nimport navlinks from './configs/navigation-links';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport Login from './components/Login';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container-fluid\">\n        <Switch>\n          <Route exact path=\"/login\">\n            <Login home=\"/home\"/>\n          </Route>\n          \n          {navlinks.map(link => (\n            <Route key={link.name} path={link.href}>\n              <NavigationBar links={navlinks}/>\n              <link.route path={link.href}/>\n            </Route>\n          ))}\n\n          <Route exact path=\"/\">\n            <Redirect to=\"/home\"/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}