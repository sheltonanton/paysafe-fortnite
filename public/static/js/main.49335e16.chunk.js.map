{"version":3,"sources":["components/LoginButtons.js","App.js","reportWebVitals.js","index.js"],"names":["LoginButtons","props","googleLoggedInSuccess","googleUser","profile","getBasicProfile","data","name","getName","email","getEmail","image","getImageUrl","token","getAuthResponse","id_token","fromGoogle","fetch","method","headers","body","JSON","stringify","then","response","json","setState","loggedIn","catch","error","console","log","googleLoggedInFailed","alert","googleLoggedOutSuccess","dummyLogin","render","state","className","clientId","buttonText","onLogoutSuccess","onSuccess","onFailure","isSignedIn","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"6OAIqBA,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAMVC,sBAAwB,SAACC,GACrB,IAAIC,EAAUD,EAAWE,kBACrBC,EAAO,CACPC,KAAMH,EAAQI,UACdC,MAAOL,EAAQM,WACfC,MAAOP,EAAQQ,cACfC,MAAOV,EAAWW,kBAAkBC,SACpCC,YAAY,GAEhBC,MAAM,gBAAiB,CACfC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUhB,KACtBiB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAE,GACtC,EAAKC,SAAS,CAACC,UAAU,OAC1BC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAzBN,EA6BlBG,qBAAuB,WACnBC,MAAM,yDA9BQ,EAiClBC,uBAAyB,WACrB,EAAKR,SAAS,CAACC,UAAU,KAlCX,EAqClBQ,WAAa,WACTlB,MAAM,gBAAiB,CACnBC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,MACtBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAE,GACtCQ,MAAM,sBACPL,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OA/CF,EAmDlBO,OAAS,WACL,OAAQ,8BACD,EAAKC,MAAMV,SAOT,cAAC,eAAD,CACDW,UAAU,OACVC,SAAS,2EACTC,WAAW,uBACXC,gBAAiB,EAAKP,yBAXD,cAAC,cAAD,CACrBI,UAAU,OACVC,SAAS,2EACTC,WAAW,sBACXE,UAAW,EAAKxC,sBAChByC,UAAW,EAAKX,qBAChBY,YAAY,OAzDpB,EAAKP,MAAQ,CACTV,UAAU,GAHA,E,UADoBkB,IAAMC,WCMjCC,MANf,WACE,OAAQ,qBAAKT,UAAU,YAAf,SACN,cAAC,EAAD,OCMWU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASpB,OACP,cAAC,IAAMqB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.49335e16.chunk.js","sourcesContent":["import React from 'react';\r\nimport {GoogleLogin, GoogleLogout} from 'react-google-login';\r\n\r\n\r\nexport default class LoginButtons extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loggedIn: false\r\n        }\r\n    }\r\n\r\n    googleLoggedInSuccess = (googleUser) => {\r\n        var profile = googleUser.getBasicProfile();\r\n        var data = {\r\n            name: profile.getName(),\r\n            email: profile.getEmail(),\r\n            image: profile.getImageUrl(),\r\n            token: googleUser.getAuthResponse().id_token,   \r\n            fromGoogle: true\r\n        }\r\n        fetch(\"/api/sessions\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            }).then(response => response.json()).then(json => {\r\n                this.setState({loggedIn: true});\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    googleLoggedInFailed = () => {\r\n        alert(\"Unable to login with google. Try other login methods\");\r\n    }\r\n\r\n    googleLoggedOutSuccess = () => {\r\n        this.setState({loggedIn: false});\r\n    }\r\n\r\n    dummyLogin = () => {\r\n        fetch('/api/sessions', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({})\r\n        }).then(response => response.json()).then(json => {\r\n            alert(\"Dummy signed in\");\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        return (<div>\r\n            {(!this.state.loggedIn)?(<GoogleLogin\r\n                className=\"mr-2\"\r\n                clientId=\"584685314295-m141d4bsqmmc15qq9mc7lfbfmrosng8i.apps.googleusercontent.com\"\r\n                buttonText=\"Sign in with Google\"\r\n                onSuccess={this.googleLoggedInSuccess}\r\n                onFailure={this.googleLoggedInFailed}\r\n                isSignedIn={true}\r\n            />):(<GoogleLogout\r\n                className=\"mr-2\"\r\n                clientId=\"584685314295-m141d4bsqmmc15qq9mc7lfbfmrosng8i.apps.googleusercontent.com\"\r\n                buttonText=\"Sign out from Google\"\r\n                onLogoutSuccess={this.googleLoggedOutSuccess}\r\n            />)}\r\n        </div>);\r\n    }\r\n}","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport LoginButtons from './components/LoginButtons';\n\nfunction App() {\n  return (<div className=\"container\">\n    <LoginButtons/>\n  </div>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}