{"version":3,"sources":["scripts/fetchSessionChecker.js","scripts/paysafecheckout.js","components/NavigationBar.js","routes/Home/HomeContent.js","scripts/fortnite.js","configs/fortnite-categories.js","routes/Home.js","routes/Logout.js","routes/Cart.js","configs/navigation-links.js","components/LoginButtons.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","url","options","responseCallback","errorCallback","response","fetch","then","json","error","window","location","href","catch","console","log","API_KEY","btoa","checkout","amount","hash","extra","Promise","resolve","reject","currency","merchantRefNum","String","billingAddress","nickName","street","street2","city","zip","country","state","environment","customer","firstName","lastName","email","phone","dateOfBirth","day","month","year","displayPaymentMethods","paymentMethodDetails","paysafecard","consumerId","Object","keys","Date","getTime","global","paysafe","setup","instance","result","currencyCode","stage","expired","Error","NavigationBar","render","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","props","links","map","link","to","activeClassName","name","React","Component","HomeContent","items","item","price","src","images","background","alt","style","height","description","pathname","fortnite","require","backpack","bannertoken","bundle","contrail","cosmeticvariant","emoji","emote","glider","loadingscreen","music","outfit","pet","pickaxe","spray","toy","wrap","Home","componentDidMount","a","listItems","setState","tabs","tab","path","fortnitemapping","exact","match","params","Cart","cart","push","method","headers","removeItem","filter","i","placeOrder","total","body","JSON","stringify","alert","cartDetails","getCartDetails","orderSummary","getOrderDetails","customerDetails","getCustomerDetails","width","onClick","bind","length","validation","warning","Array","isArray","navlinks","route","withRouter","useGoogleLogout","clientId","onLogoutSuccess","history","useHistory","signOut","loaded","LoginButtons","googleLoggedInSuccess","googleUser","profile","getBasicProfile","data","getName","getEmail","image","getImageUrl","token","getAuthResponse","id_token","fromGoogle","loggedIn","redirect","home","googleLoggedInFailed","dummyLogin","buttonText","onSuccess","onFailure","isSignedIn","Login","top","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96e1ec76.chunk.js","sourcesContent":["module.exports = function wfetch(url, options, responseCallback, errorCallback){\r\n    let response = fetch(url, options);\r\n    response.then(response => response.json()).then(response => {\r\n        if(response.error === \"NOT AUTHORIZED\"){\r\n            window.location.href = \"/login\";\r\n            return;\r\n        }\r\n        responseCallback(response);\r\n    }).catch(error => {\r\n        console.log(error);\r\n        errorCallback(error);\r\n    });\r\n    return response;\r\n}","import btoa from 'btoa';\r\n\r\nconst API_KEY = btoa(\"public-7751:B-qa2-0-5f031cbe-0-302d021500890ef262296563accd1cb4aab790323d2fd570d30214510bcdacdaa4f03f59477eef13f2af5ad13e3044\");\r\n\r\nexport default function checkout(amount, hash, extra){\r\n    return new Promise((resolve, reject) => {\r\n        function resultCallback(instance, error, result){\r\n            if(error){\r\n                reject(error);\r\n                return false;\r\n            }else{\r\n                result.merchantRefNum = options.merchantRefNum;\r\n                result.amount = options.amount;\r\n                result.currencyCode = options.currency;\r\n                return resolve(result);\r\n            }\r\n        }\r\n        function closeCallback(stage, expired){\r\n            if(expired) reject(new Error(\"Checkout expired\"));\r\n            return false;\r\n        }\r\n\r\n        var options = {\r\n            currency: \"USD\",\r\n            merchantRefNum: String(hash),\r\n            amount: amount * 100,\r\n            billingAddress: { //remove this\r\n                nickName: \"John Dee\",\r\n                street: \"20735 Stevens Creek Blvd\",\r\n                street2: \"Montessori\",\r\n                city: \"Cupertino\",\r\n                zip: \"95014\",\r\n                country: \"US\",\r\n                state: \"CA\"\r\n            },\r\n            environment: \"TEST\",\r\n            customer: {\r\n                firstName: \"John\",\r\n                lastName: \"Dee\",\r\n                email: \"johndee@paysafe.com\",\r\n                phone: \"1234567890\",\r\n                dateOfBirth: {\r\n                    day: 1,\r\n                    month: 7,\r\n                    year: 1990\r\n                }\r\n            },\r\n            displayPaymentMethods: ['card'],\r\n            paymentMethodDetails: {\r\n                paysafecard: {\r\n                    consumerId: ((typeof extra == \"object\" && extra != null)? extra[Object.keys(extra)[0]]: new Date().getTime())\r\n                }\r\n            }\r\n        }\r\n        global.paysafe.checkout.setup(API_KEY, options, resultCallback, closeCallback);\r\n    });\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nexport default class NavigationBar extends React.Component {\r\n    render = () => (\r\n        <nav className=\"navbar sticky-top navbar-expand-md navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"/\">Go Fortnite!</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            \r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    {this.props.links.map(link => (\r\n                        <li key={link.name} className=\"nav-item\">\r\n                            <NavLink to={link.href} className=\"nav-link\" activeClassName=\"active\">{link.name}</NavLink>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class HomeContent extends React.Component {\r\n    render = () => (\r\n        <div className=\"row\">\r\n            {\r\n                this.props.items.map(item => {\r\n                    if(item.price == 0){\r\n                        item.price = 100;\r\n                    }\r\n                    return (<div key={item.id} className=\"col-lg-4 col-md-5 col-sm-6\">\r\n                        <div className=\"card my-2\">\r\n                            <div className=\"card-header\">\r\n                                {item.type}\r\n                            </div>\r\n                            <img src={item.images.background} alt={item.name} className=\"card-image-top image-fluid rounded\" style={{height: \"230px\"}}/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{item.name}</h5>\r\n                                <p className=\"card-text\">{item.description}</p>\r\n                                <Link \r\n                                    to={{\r\n                                        pathname: \"../cart\",\r\n                                        item\r\n                                    }}   \r\n                                    className=\"btn btn-success\">\r\n                                        Buy\r\n                                </Link>\r\n                                <p className=\"float-right\">{\"$\"+item.price}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>);\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}","const FortniteAPI = require('fortnite-api-io');\r\nconst fortnite = new FortniteAPI(\"13fd547d-483005c8-d4944523-16cc9b95\");\r\n\r\nlet items = null;\r\nexport default function getItems(){\r\n    return new Promise(async function(resolve, reject){\r\n        try{\r\n            if(items != null){\r\n                resolve(items);\r\n                return;\r\n            }\r\n            items = await fortnite.listItems();\r\n            resolve(items);\r\n        }catch(error){\r\n            reject(items);\r\n        }\r\n    });\r\n}","export default {\r\n    backpack: \"Back Pack\",\r\n    bannertoken: \"Banner Token\",\r\n    bundle: \"Bundle\",\r\n    contrail: \"Contrail\",\r\n    cosmeticvariant: \"Cosmetic Variant\",\r\n    emoji: \"Emoji\",\r\n    emote: \"Emote\",\r\n    glider: \"Glider\",\r\n    loadingscreen: \"Loading Screen\",\r\n    music: \"Music\",\r\n    outfit: \"Outfit\",\r\n    pet: \"Pet\",\r\n    pickaxe: \"Pick Axe\",\r\n    spray: \"Spray\",\r\n    toy: \"Toy\",\r\n    wrap: \"Wrap\"\r\n}","import React from 'react';\r\nimport { NavLink, Route, Switch, Redirect } from 'react-router-dom';\r\nimport HomeContent from './Home/HomeContent';\r\n\r\nimport getFortniteItems from '../scripts/fortnite';\r\nimport fortnitemapping from '../configs/fortnite-categories';\r\n\r\nexport default class Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            tabs: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        getFortniteItems().then(result => {\r\n            this.setState({tabs: result.items});\r\n        }).catch(error => {\r\n            this.setState({tabs: null});\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        if(this.state.tabs == null){\r\n            return (<div className=\"row\"></div>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-12 col-md-3 col-lg-2 col-xl-2\">\r\n                    <nav className=\"nav navbar-dark bg-dark\">\r\n                        <ul className=\"navbar-nav p-3 list-unstyled\">\r\n                            {Object.keys(this.state.tabs).map(tab => (\r\n                                <li key={tab} className=\"nav-item\">\r\n                                    <NavLink className=\"nav-link\" activeClassName=\"active\" to={this.props.path + \"/\" + tab}> {(fortnitemapping[tab] != null)? fortnitemapping[tab]: tab} </NavLink>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"col-sm-12 col-md-9 col-lg-10 col-xl-10\">\r\n                        <Switch>\r\n                            <Route exact path={this.props.path}>\r\n                                <Redirect to={this.props.path + \"/\" + Object.keys(this.state.tabs)[0]}/>\r\n                            </Route>\r\n                            \r\n                            <Route path={this.props.path + \"/:tab\"} render={\r\n                                (props) => {\r\n                                    return (\r\n                                        <HomeContent name={props.match.params.tab} items={this.state.tabs[props.match.params.tab]}/>\r\n                                    );\r\n                                }\r\n                            }/>\r\n                        </Switch>\r\n                </div>\r\n            </div>);\r\n    };\r\n}","import { useGoogleLogout } from 'react-google-login';\r\nimport {useHistory} from 'react-router-dom';\r\nconst fetch = require('../scripts/fetchSessionChecker');\r\n\r\nexport default function(){\r\n    let {signOut, loaded} = useGoogleLogout({\r\n        clientId: \"584685314295-m141d4bsqmmc15qq9mc7lfbfmrosng8i.apps.googleusercontent.com\",\r\n        onLogoutSuccess: function(){\r\n            fetch(\"/api/sessions\", {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n            }, json => {\r\n                let history = useHistory();\r\n                console.log(history);\r\n                history.push(\"/login\");\r\n            }, error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    });\r\n    if(loaded){\r\n        signOut();\r\n    }\r\n    return (<div></div>);\r\n}","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport checkout from '../scripts/paysafecheckout';\r\nconst fetch = require('../scripts/fetchSessionChecker');\r\n\r\nclass Cart extends React.Component {\r\n    static propTypes = {\r\n        match: PropTypes.object.isRequired,\r\n        location: PropTypes.object.isRequired,\r\n        history: PropTypes.object.isRequired\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n        let cart = [];\r\n        if(props.cart != null && Array.isArray(props.cart)){\r\n            cart = props.cart;\r\n        }\r\n        this.state = {\r\n            cart,\r\n            customer: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const {location} = this.props;\r\n        let item = location.item;\r\n        let cart = this.state.cart;\r\n        if(item != null){\r\n            cart.push(item);\r\n        }\r\n        fetch('/api/customers', {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }, json => {\r\n            this.setState({cart, customer: json});\r\n        }, error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    removeItem = (item) => {\r\n        let cart = this.state.cart.filter(i => i.id != item.id);\r\n        this.setState({cart, customer: this.state.customer});\r\n    }\r\n\r\n    placeOrder = (total) => {\r\n        fetch('/api/customers', {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }, response => {\r\n            checkout(total, new Date().getTime(), response).then(result => {\r\n                fetch('/api/payments/', {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(result)\r\n                }, json => {\r\n                    console.log(json);\r\n                }, error => {\r\n                    alert(\"Error while processing payment\");\r\n                });\r\n                return true;\r\n            }, error => {\r\n                console.log(error);\r\n                alert(\"PaySafe checkout failed\");\r\n                return false;\r\n            });\r\n        }, error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        let cartDetails = this.getCartDetails();\r\n        let orderSummary = this.getOrderDetails();\r\n        let customerDetails = this.getCustomerDetails();\r\n        return (\r\n            <section>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-9 col-md-9 col-sm-12\">\r\n                    {cartDetails}\r\n                </div>\r\n                <div className=\"col-lg-3 col-md-3 col-sm-12\">\r\n                    {orderSummary}\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-9 col-md-9 col-sm-12\">\r\n                    {customerDetails}\r\n                </div>\r\n            </div>\r\n            </section>\r\n        );\r\n    }\r\n\r\n    getCartDetails = () => {\r\n        let cart = this.state.cart;\r\n        let cartDetails = cart.map(item => {\r\n            return (\r\n                <div key={item.id} className=\"card my-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4\">\r\n                            <img src={item.images.background} alt={item.name} className=\"img-fluid\" style={{width: \"200px\"}}/>\r\n                        </div>\r\n                        <div className=\"col-5\">\r\n                            <div className=\"card-body\" style={{height: \"85%\"}}>\r\n                                <h5 className=\"card-title\">{item.name}</h5>\r\n                                <section className=\"card-text\">\r\n                                    <p>{item.description}</p>\r\n                                    <p><b>{item.type} (type)</b></p>\r\n                                </section>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-3 text-right\">\r\n                            <p className=\"card-text p-4 align-bottom\">\r\n                                <big className=\"text-muted\">\r\n                                    {\"$\" + item.price}\r\n                                </big>\r\n                            </p>\r\n                            <button className=\"btn btn-danger btn-sm m-4\" onClick={this.removeItem.bind(this, item)}>\r\n                                &#10007;\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n        if(cart.length == 0){\r\n            cartDetails = <h2 className=\"text-muted text-center p-4\">Your cart is empty!</h2>;\r\n        }\r\n        return cartDetails;\r\n    }\r\n\r\n    getOrderDetails = () => {\r\n        let total = 0;\r\n        let orderSummary = (\r\n            <div>\r\n                <table className=\"table my-2\" style={{height: \"70%\"}}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Item</th>\r\n                            <th className=\"text-right\">Cost</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.state.cart.map(item => {\r\n                            total += item.price;\r\n                            return (<tr key={item.id}>\r\n                                <td>{item.name}</td>\r\n                                <td className=\"text-right\">{\"$\" + item.price}</td>\r\n                            </tr>);\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td><i>Total</i></td>\r\n                            <td className=\"text-right\">{\"$\" + total}</td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n                <div className=\"text-right\">\r\n                    <button \r\n                        className={\r\n                            \"btn btn-sm btn-outline-success m-1\" + (\r\n                                (\r\n                                    this.state.cart.length == 0 ||\r\n                                    this.state.customer == null || \r\n                                    this.state.customer.validation !== 'validated'\r\n                                )? \" disabled\": \"\")\r\n                            } \r\n                        onClick={\r\n                            (\r\n                                this.state.cart.length == 0 ||\r\n                                this.state.customer == null || \r\n                                this.state.customer.validation !== 'validated'\r\n                            )? null: this.placeOrder.bind(this, total)\r\n                        }\r\n                    >\r\n                            Place Order\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n        return orderSummary;\r\n    }\r\n\r\n    getCustomerDetails = () => {\r\n        if(this.state.customer == null){\r\n            //disable the place order and return the form\r\n            //perform validation on customer form\r\n            return (\r\n                <h5>Create Address</h5>\r\n            );\r\n        }else{\r\n            let warning = \"\";\r\n            if(this.state.customer.validation !== \"success\"){\r\n                warning = <small className=\"text-danger p-1\">\r\n                    <b>&#x26A0; Specify your right address</b>\r\n                    </small>\r\n            }\r\n            return (\r\n                <section>\r\n                    {warning}\r\n                    <h5>Address Details</h5>\r\n                </section>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Cart);\r\n//render the card with horizontal layout and give the total at the right column","import Home from '../routes/Home';\r\nimport Logout from '../routes/Logout';\r\nimport Cart from '../routes/Cart';\r\n\r\nlet navlinks = [\r\n    {\r\n        name: \"Home\",\r\n        href: \"/home\",\r\n        route: Home\r\n    },{\r\n        name: \"My Cart\",\r\n        href: \"/cart\",\r\n        route: Cart\r\n    },{\r\n        name: \"Logout\",\r\n        href: \"/logout\",\r\n        route: Logout\r\n    }\r\n]\r\n\r\nexport default navlinks;","import React from 'react';\r\nimport {GoogleLogin} from 'react-google-login';\r\nimport { Redirect } from 'react-router-dom';\r\nconst fetch = require('../scripts/fetchSessionChecker');\r\nexport default class LoginButtons extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loggedIn: false\r\n        }\r\n    }\r\n\r\n    googleLoggedInSuccess = (googleUser) => {\r\n        var profile = googleUser.getBasicProfile();\r\n        var data = {\r\n            name: profile.getName(),\r\n            email: profile.getEmail(),\r\n            image: profile.getImageUrl(),\r\n            token: googleUser.getAuthResponse().id_token,   \r\n            fromGoogle: true\r\n        }\r\n        fetch(\"/api/sessions\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            }, (json) => {\r\n                this.setState({loggedIn: true, redirect: this.props.home});\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    googleLoggedInFailed = () => {\r\n        alert(\"Unable to login with google. Try other login methods\");\r\n    }\r\n\r\n    dummyLogin = () => {\r\n        fetch('/api/sessions', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({})\r\n        }, json => {\r\n            alert(\"Dummy signed in\");\r\n        }, error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        if(this.state.redirect){\r\n            return (<Redirect to={this.state.redirect}/>);\r\n        }\r\n        return (<div>\r\n            {(<GoogleLogin\r\n                className=\"mr-2\"\r\n                clientId=\"584685314295-m141d4bsqmmc15qq9mc7lfbfmrosng8i.apps.googleusercontent.com\"\r\n                buttonText=\"Sign in with Google\"\r\n                onSuccess={this.googleLoggedInSuccess}\r\n                onFailure={this.googleLoggedInFailed}\r\n                isSignedIn={true}\r\n            />)}\r\n        </div>);\r\n    }\r\n}","import React from 'react';\r\n\r\nimport LoginButtons from './LoginButtons';\r\n\r\nexport default class Login extends React.Component {\r\n    render = () => (\r\n        <div className=\"container py-5\" style={{top: \"auto\"}}>\r\n            <h2 className=\"text-center p-5\">Welcome to Fortnite Store!</h2>\r\n            <div className=\"row\">\r\n                <div className=\"col text-center my-auto\">\r\n                    <LoginButtons home={this.props.home}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\nimport NavigationBar from './components/NavigationBar';\nimport navlinks from './configs/navigation-links';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport Login from './components/Login';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container-fluid\">\n        <Switch>\n          <Route exact path=\"/login\">\n            <Login home=\"/home\"/>\n          </Route>\n          \n          {navlinks.map(link => (\n            <Route key={link.name} path={link.href}>\n              <NavigationBar links={navlinks}/>\n              <link.route path={link.href}/>\n            </Route>\n          ))}\n\n          <Route exact path=\"/\">\n            <Redirect to=\"/home\"/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}